<?php

namespace AStar\Client;

require_once ('vendor\autoload.php');

use AStar\Client\Blockchain;
use AStar\Client\Token;
use AStar\Client\Api\SendApi;
use AStar\Client\Model\BlockchainNetwork as bn;
use AStar\Client\Model\BlockchainNetwork;

//vars
$stoken = "2d2d2d2d2d424547494e205253412050524956415445204b45592d2d2d2d2d0a4d4949456f77494241414b4341514541776f59434e6a2f76697042722f5279646b6536367045636a6339485a536274667230417937343551654c3447565243610a796d717665456244352b4a374e53474843786d785536535473316374675530486c4f4a43744b37454a744172354233684d556d47722f7355537033674c4d43310a59744373794c4b4a64484d34414d656a44722f4d39416f595765576f3778393061475573343452707836596556626e4155664e7776495361314e753232786a5a0a6165624a714e37507963677448424c5468676272374d4f416f4e544d705a56756e423730745552696a76486c494b655a517a5a33524632585568314b4567524b0a3341724e5837427662434366716741722f30355233504d4e4c5165376652364632523147723359435461456e72754e2f4e7a58654b77475950333470307044580a4436616b5235325a584679452b65575a67383434686430565269475a364d674e625a714e6777494441514142416f494241436253794334377048747252364a450a7938344d6234504b44764657754a39576e6b704437656152364d327758324d7135546e784151526f573045306d704b49466f504970504f6b7254586c2b46634f0a494b302b5730486b6635476669714d45733655366e3338514259532b37626341337a4c526f79714c4e3550655378636377525a34675664546a48696b745972450a4a462b526b647632325958585363616952426758466a454a356a30464933702f6b4251575963325a6879517334566175484654566f6b594a56335a4b304266510a566c4834387657744e69575735772f6d6c476830464665496478472b2b4130565a2f3434636e49695a6e742f2b42785a422f4d383159554f4a326747665464430a6d662b59574b73764c30486c383464367a686c56534d617a57743361484f6e796e7a6f4354336b5638542b6250617557794b69324b5a6a64783868416d5179340a6a2f4e4a33674543675945417963735a365a714b397831794e2b6e5a785432586a72365a6b5754566b304264444e67426e68777a4d59447a71784e6d4f4634500a77454a464e514750742b2f3276426a49556f7738373368486569396654455061584d75326c3855756b6458476430615765666c486a75576b542b687a73526d610a594e4e5541513747797958732f79304545527a783278554e527454376e7156424557725277752f41594c647732573748516578473771454367594541397362340a373730527a635436673543674b72777a7a384b4937614f366e714232587955594b434c7541373134755a36744630456d33334579644f756e696747394a5030790a796730594f684e34496a636d4675427044573950682f4f75385a637476364e6178596437446b346775437255624353566b78307a5a6544327152426a5a482f370a497254554f6e33464d764c626a527358734169357470562f6663747648786d746a2b357366614d43675941574735592f4c5a744437346e76376b4c5a685348780a6c5a676c67624b5561317a475a33506c36706b424e32743674716c67533433574e6d78326e6a457371624753636653676470544764357239472b7549343359730a3748535974425769444a57747736494177767241415243375948417357753236356577794958684f455632687030446d7a7845414f3549307a476930764d34670a4a6c2f4d78342b4143526a6e2b5763444a65757667514b4267474c366e33495931594641316e48616d6b4e4a78555935636f354f4d315859616d487a454f4e590a547a72307a653031645a74304b46464b703841356e4c4d2f793075417574524c754548692b545a5142466a386e57596b4654516b537a44665142777a4f7638720a50664959364171324d776c46437a453862786358796863355759512f794d7938317271334931637944566c6c576e54697177704f6f426f6d644756322b5352580a72764164416f4742414a616a493448364e53687a596a444c4271776c59597162417147766b692b364d4b79783977464d576570514e5345734b6a2f49744132580a716761574c784c426354696767716d3977676a5831316b4f53476e595a4933335a7243456434754c776a35785151494550715045507773464764796f624e78510a6c416b3243536344695a5564367a2f6e6f645446546d32306e45774b47336c5149464b45353164723638414a746f364a496530680a2d2d2d2d2d454e44205253412050524956415445204b45592d2d2d2d2d0a";
$account = 3;
$user = "test";
$pass = "test";

$api_instance = new SendApi();

$token = new Token();
$tokenParameter = $token->sign($stoken); // string | a signed JWT token with the company privatekey.




try {
    $result = $api_instance->sendHash(
        $tokenParameter, $account, $user, $pass, "TextoFuncionando", "ETHEREUM" , 1, false);
    print_r($result);
} catch (Exception $e) {
    echo 'Exception when calling SearchApi->searchByAPIID: ', $e->getMessage(), PHP_EOL;
}


//var_dump($token);

//$objBlockchain = new Blockchain; //antes era o nome da function, mudou para __construct
//$objBlockchain = new Blockchain($token, $account, $user, $pass);
//var_dump($objBlockchain);
//$objBlockchain->registrarConteudo("conteúdo de teste", "ETHEREUM", 1, false);



?>